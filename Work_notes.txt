Tuesday 5th July 17:54

I need to take the step to make DNA 100% defining for the Cell.
This is the only way to see that inheritance is really working
I'll do this by making a branch in the code, for safety's sake.


============================================================================================================================
Tuesday 5th July 17:00

OK, seems to still be running despite my attempts at destroying everything
Seems to be running more slowly & labouring.
Could it be this change? in colony.js? if (this.cells.length <= colonyMaxSize && c.fertile) //it used to be two consecutive if statements

I think DNA is now being combined, but it's hard to be 100% sure
When I look at f.eks flatness, it's clear that Cells spawned by conception take there shape from the current GUI selection
Need to look at this in the cell Constructor.

I'd like this to run fast & smooth & be quite simple.
Maybe shape is enough to demonstrate inheritance?
Or at least - keep colorShifters simple & not linked to DNA (they are nice-to-have)

============================================================================================================================
Tuesday 5th July 08:47
I have running code where a randomised population of cells interbreeds.
Each cell in the initial spawn is unique (randomised parameters).
New cells are spawned when fertile parents collide.
The child 'inherits':
color       The parent colors are lerp'ed
StartSize   The parent sizes are averaged
velocity    The parent velocity vectors are added and normalized
position    new position is on the point of collision

Apart from this, all new parameters are given by a combination of the current GUI values & the influence of the new cells (random) DNA
Some of the GUI params are 'locked' (e.g. fertility=80%, StartSize = 30)
This is a good start!

How does it run?
Populations are fairly slow to build or sink. Sometimes things die out within a few generations, other times it is clear the max-limit cull is in effect (it runs slowly)
It looks cool and I like the fact that it starts off with a random mix of colours with each cell being unique (as opposed to 'competing clans', though I would like to see this too)

Next steps:
Combination of parent DNA gives new child DNA
DNA passed into colony.spawn so it doesn't need to get new random DNAthis.spawn = function(mousePos, vel, fillColor_, strokeColor_, cellStartSize_) {
  // Spawn a new cell (called by e.g. MousePressed in main, accepting mouse coords for start position)
  //var vel = p5.Vector.random2D(); // for the time being, vel is random
  var dna = new DNA();

  Maybe just move the 'push' call to where I need it (cell.js for collisions, sketch.js for mousePressed)
  this.cells.push(new Cell(mousePos, vel, fillColor, strokeColor, dna, cellStartSize));

Ellipses can also be cigars (flatness < 1.0)

From "Evolution Ecosystem":
// At any moment there is a teeny, tiny chance a bloop will reproduce
this.reproduce = function() {
  // asexual reproduction
  if (random(1) < 0.0005) {
    // Child is exact copy of single parent
    var childDNA = this.dna.copy();
    // Child DNA can mutate
    childDNA.mutate(0.01);
    return new Bloop(this.position, childDNA);
  }
  else {
    return null;
  }
}

Bloop constructor is called with childDNA passed in, just like a Cell.
Reproduction is called in the world/colony:
// Perhaps this bloop would like to make a baby?
var child = b.reproduce();      // cell b is copied by reproduce() which returns a new Bloop
if (child != null) this.bloops.push(child);
}
I need something like:
var childDNA = this.dna.combine(other.dna);

Solved as combine() in DNA
============================================================================================================================


Later on:
Introduce 'nr. of clans' parameters
0   = all cells unique
1   = all cells identical
>1  = 2 or more clans








=============================================================================================================================
I need to decide on some fundamental rules, like:

Larger radius = lower fertility    (this would appear to be a rather simple linkage, but is a good place to start)
Larger radius = lower speed

This will determine what sort of cells PROSPER & SPREAD across the colony
The initial connection between purely visual elements & those which lead to prosperity is arbitrary.
As a certain strain prospers in the gene-pool, they ought to dominate the visual output (the collective phenotype) too.

Fertility needs to be a limited quantity. If a cell remains fertile until death, it will most likely reproduce sooner or later.
On the other hand, if lifetime is short, maybe the cell will die first.

1) Cells are born small and grow to full size
2) They reach maturity

If a cell starts at full size and starts to shrink, reaching maturity sometime along the way,
> late maturity will be punished because size is already so small that collision is unlikely (plus, death looms)
> Combination of early maturity & large birth-size will be favoured. Cells will tend to get bigger?
> Maybe large size could be combined with higher growth-rate? (Will shrink sooner?)

SIZE / AGE-OF-MATURITY (fecundity)
GROWTH RATE / MOVEMENT (metabolism)

What about 'Max number of offspring' too? This should be quite easy to include.

"In demography and biology, fecundity is the actual reproductive rate of an organism or population,
measured by the number of gametes (eggs), seed set, or asexual propagules.
Fecundity is similar to fertility, the natural capability to produce offspring." <source: https://en.wikipedia.org/wiki/Fecundity>

I need a mechanism to keep the population within executable limits (e.g. a cap on population size)
A simple way of doing this is to not call 'spawn' function if it will raise the population above the defined ceiling.
This is an expression of the environment feeding back onto an individual cell, but is somewhat indiscriminate

=============================================================================================================================
Features that INCREASE likelihood of reproducing:
Large size
High fertility
High mobility (more likely to move to a space where other cells are located, but may also avoid other cells)

If using a steering behaviour: High strength of 'Seek' behaviour


Features that DECREASE likelihood of reproducing:
Small size
Low fertility
Low growth rate ? Takes a longer time to reach fertile state, but will remain fertile for longer

If using a steering behaviour: Low strength of 'Seek' behaviour

=============================================================================================================================
I want the offspring of two parents to clearly show that it has inherited traits from both.
So, the visual appearance needs to be partly determined by the DNA (or some other inheritable component of the cell object),

The visual elements of the cell are:
------------------------------------
Colour (Fill & Stroke, H, S, B & alpha)  (PRIMARY INDICATOR)
Size (maxiumum radius, either starting small & growing, or starting at max and shrinking)
Flatness (from circle to ellipse)
Could possibly introduce some new elements like:
Nucleus (enabled/disabled, size, colour) (Will possibly always be enabled)
Stepped drawing effect (cell)
Stepped drawing effect (nucleus)
=============================================================================================================================
